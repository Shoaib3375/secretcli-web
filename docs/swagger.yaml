definitions:
  model.ErrorResponse:
    properties:
      code:
        description: Error code
        type: integer
      message:
        description: Detailed error message
        type: string
    type: object
  model.SuccessResponse:
    properties:
      code:
        description: Status code
        type: integer
      data:
        description: Optional data payload
      message:
        description: Success message
        type: string
    type: object
  model.SwaggerAuthRequest:
    description: Auth registration request payload
    properties:
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: secretpass123
        type: string
    type: object
  model.SwaggerGeneratePasswordRequest:
    properties:
      include_special_symbol:
        example: true
        type: boolean
      length:
        example: 8
        type: integer
    type: object
  model.SwaggerSecretRequest:
    properties:
      email:
        example: john@example.com
        type: string
      note:
        example: This is my Facebook Password. Login korben na.
        type: string
      password:
        example: mahin
        type: string
      title:
        example: Facebook Credentials
        type: string
      username:
        example: mokhlesur.mahin
        type: string
      website:
        example: https://www.facebook.com/
        type: string
    type: object
  model.SwaggerUserLoginRequest:
    properties:
      email:
        example: john@example.com
        type: string
      password:
        example: secretpass123
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/api/login:
    post:
      consumes:
      - application/json
      description: This endpoint allows a user to login with an email and password.
      parameters:
      - description: User login payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.SwaggerUserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /auth/api/register:
    post:
      consumes:
      - application/json
      description: This endpoint allows a new user to register with a name, email
        and password.
      parameters:
      - description: User registration payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.SwaggerAuthRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /secret/api/create:
    post:
      consumes:
      - application/json
      description: This endpoint allows users to create a new secret with an encrypted
        password.
      parameters:
      - description: Bearer token for authentication
        in: header
        name: Authorization
        required: true
        type: string
      - description: Secret payload containing title, username, password, note, email,
          website, and user ID
        in: body
        name: secret
        required: true
        schema:
          $ref: '#/definitions/model.SwaggerSecretRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new secret
      tags:
      - secrets
  /secret/api/generatepassword:
    post:
      consumes:
      - application/json
      description: Generates a password based on provided parameters.
      parameters:
      - description: Bearer <token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Password generation parameters
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.SwaggerGeneratePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Generate a secure password
      tags:
      - secrets
swagger: "2.0"
